// *****************************************************************************
/*!
  \file      src/Walker/integrator.ci
  \copyright 2012-2015 J. Bakosi,
             2016-2018 Los Alamos National Security, LLC.,
             2019-2020 Triad National Security, LLC.
             All rights reserved. See the LICENSE file for details.
  \brief     Charm++ module interface file for Integrator
  \details   Charm++ module interface file for Integrator
*/
// *****************************************************************************

module integrator {

  extern module distributor;
  extern module collector;
  extern module particlewriter;

  namespace walker {

    array [1D] Integrator {
      entry Integrator( CProxy_Distributor hostproxy,
                        CProxy_Collector collproxy,
                        tk::CProxy_ParticleWriter particlewriterproxy,
                        uint64_t npar );
      entry void setup( tk::real dt,
                        tk::real t,
                        uint64_t it,
                        const std::map< tk::ctr::Product, tk::real >& moments );
      entry
        void advance( tk::real dt,
                      tk::real t,
                      uint64_t it,
                      const std::map< tk::ctr::Product, tk::real >& moments );
      entry void out();
      entry void accumulate();
      entry void accumulateCen( uint64_t it,
                                tk::real t,
                                tk::real dt,
                                const std::vector< tk::real >& ord );
    }

  } // walker::

}
