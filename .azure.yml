# Docker image
# Build a Docker image to deploy, run, or push to a container registry.
# Add steps that use Docker Compose, tag images, push to a registry, run an image, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/docker

jobs:
- job: "Quinoa"
  timeoutInMinutes: 270
  pool:
    vmImage: 'Ubuntu 16.04'
  variables:
    imageName: 'quinoa-azure:$(build.buildId)'
  strategy:
    matrix:
      gnu-debug:
        COMPILER: 'gnu'
        BUILD: 'Debug'
        DISTRO: 'debian-gnu'
      gnu-debug-static:
        COMPILER: 'gnu'
        BUILD: 'Debug'
        SHARED_LIBS: 'off'
        DISTRO: 'debian-gnu-static'
      gnu-release:
        COMPILER: 'gnu'
        BUILD: 'Release'
        DISTRO: 'debian-gnu'
      gnu-release-static:
        COMPILER: 'gnu'
        BUILD: 'Release'
        SHARED_LIBS: 'off'
        DISTRO: 'debian-gnu-static'
      gnu-debug-smp:
        COMPILER: 'gnu'
        BUILD: 'Debug'
        DISTRO: 'debian-gnu-smp'
        SMP: 'on'
      gnu-release-smp:
        COMPILER: 'gnu'
        BUILD: 'Release'
        DISTRO: 'debian-gnu-smp'
        SMP: 'on'
      gnu-release-m2m:
        COMPILER: 'gnu'
        BUILD: 'Release'
        DISTRO: 'debian-gnu'
        M2M: true
      clang-debug:
        COMPILER: 'clang'
        BUILD: 'Debug'
        DISTRO: 'debian-clang'
      clang-debug-static:
        COMPILER: 'clang'
        BUILD: 'Debug'
        SHARED_LIBS: 'off'
        DISTRO: 'debian-clang-static'
      clang-release:
        COMPILER: 'clang'
        BUILD: 'Release'
        DISTRO: 'debian-clang'
      clang-release-m2m:
        COMPILER: 'clang'
        BUILD: 'Release'
        DISTRO: 'debian-clang'
        M2M: true
      clang-release-static:
        COMPILER: 'clang'
        BUILD: 'Release'
        SHARED_LIBS: 'off'
        DISTRO: 'debian-clang-static'
      clang-debug-smp:
        COMPILER: 'clang'
        BUILD: 'Debug'
        DISTRO: 'debian-clang-smp'
        SMP: 'on'
      clang-release-smp:
        COMPILER: 'clang'
        BUILD: 'Release'
        DISTRO: 'debian-clang-smp'
        SMP: 'on'
      intel-debug:
        COMPILER: 'intel'
        BUILD: 'Debug'
        DISTRO: 'debian-intel'
        RNGTEST: false
      intel-release:
        COMPILER: 'intel'
        BUILD: 'Release'
        DISTRO: 'debian-intel'
        RNGTEST: false
      doc:
        COMPILER: 'gnu'
        DOC: true
        DISTRO: 'debian-doc'
  steps:
    - bash: |
        sed -i "/^FROM/s/debian/${DISTRO}/" tools/docker/Dockerfile.quinoa-build-azure
        docker build \
               --build-arg COMPILER=${COMPILER} \
               --build-arg BUILD=${BUILD} \
               --build-arg DOC=${DOC} \
               --build-arg SHARED_LIBS="${SHARED_LIBS}" \
               --build-arg SMP=${SMP} \
               --build-arg M2M=${M2M} \
               --build-arg RNGTEST=${RNGTEST} \
               --rm=false -f tools/docker/Dockerfile.quinoa-build-azure -t ${DISTRO} .
      displayName: 'Build & Test'
